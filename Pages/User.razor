@page "/User"
@using System.ComponentModel.DataAnnotations
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Popups 
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using TSJ_CRI.Data
@using TSJ_CRI.Model
@inject UserManageService userManageService
@attribute [Authorize(Roles = "1")]
@inject IJSRuntime js

<br />
<div class="container">
    <div class="row">
        <div class="col-xs-12 col-md-10">
            <h3>User Management</h3>
        </div>
        <div class="col-xs-12 col-md-2">
                <SfButton IconCss="e-icons e-plus" IsPrimary="true" @onclick="@OpenDialog">New User</SfButton>
        </div>
    </div>
</div>

<br />

<SfDialog Target="#target" Width="445px" AllowDragging="false" IsModal="true" ShowCloseIcon="true" @bind-Visible="@IsVisible">
    <DialogTemplates>
        <Header> New User </Header>
        <Content> 

            <div class="form-row">

                <EditForm Model="@model" OnValidSubmit="@submit">
                    <DataAnnotationsValidator>
                        <div class="form-group col-md-6">
                            <label class="e-float-text e-label-top">Username</label>
                            <SfTextBox ID="UserName" @bind-Value="@model.username" )"></SfTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="e-float-text e-label-top">User Email</label>
                            <SfTextBox ID="UserName" @bind-Value="@" )"></SfTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="e-float-text e-label-top">Cabang</label>
                            <SfTextBox ID="UserName" @bind-Value="@email" )"></SfTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="e-float-text e-label-top">Roles</label>
                            <SfTextBox ID="UserName" @bind-Value="@email" )"> </SfTextBox>
                        </div>
                    </DataAnnotationsValidator>
                    

                </EditForm>
            </div>

        </Content>
    </DialogTemplates>
    <DialogAnimationSettings Effect="@AnimationEffect" Duration=400 />
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@CloseDialog" />
        <DialogButton Content="Cancel" OnClick="@CloseDialog" />
    </DialogButtons>
</SfDialog>


@{
    var SpecificCols = (new string[] { "username" });
    var Tool = (new List<string>() { "Search" });
}

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <div class="content-wrapper e-bigger e-adaptive-demo">
                <div class="e-mobile-layout">
                    <div class="e-mobile-content">
                        <SfGrid DataSource="@_user" AllowSorting="true" AllowPaging="true" AllowTextWrap="true" Toolbar="@Tool" TValue="UserManage">
                            <GridSearchSettings Fields=@SpecificCols IgnoreCase="true"></GridSearchSettings>
                            <GridEditSettings AllowEditing="true" AllowAdding="true"></GridEditSettings>
                            <GridEvents OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompleteHandler" TValue="UserManage"></GridEvents>
                            <GridPageSettings PageSize="10"></GridPageSettings>
                            <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
                            <GridColumns>
                                <GridColumn Field="@nameof(UserManage.id)" HeaderText="No" IsPrimaryKey="true"></GridColumn>
                                <GridColumn Field="@nameof(UserManage.username)" HeaderText="User Name"></GridColumn>
                                <GridColumn Field="@nameof(UserManage.email)" HeaderText="Email"></GridColumn>
                                <GridColumn Field="@nameof(UserManage.cabang)" HeaderText="Cabang" EditType="EditType.DropDownEdit">
                                    <EditTemplate>
                                        @{
                                            var UserCabang = (context as UserManage);
                                            <SfDropDownList ID="org_id" TItem="Cabang" TValue="string" @bind-Value="@(UserCabang.org_id)" DataSource="@_cabang">
                                                <DropDownListFieldSettings Value="org_id" Text="branch_name"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        }
                                    </EditTemplate>
                                </GridColumn>
                                <GridColumn Field="@nameof(UserManage.roles)" HeaderText="Jabatan">
                                    <Template>
                                        @{
                                            var categori = (context as UserManage);
                                            @if (categori.roles == "1")
                                            {
                                                <div>
                                                    Admin
                                                </div>
                                            }
                                            @if (categori.roles == "2")
                                            {
                                                <div>
                                                    Pengisi
                                                </div>
                                            }
                                            @if (categori.roles == "3")
                                            {
                                                <div>
                                                    Pengecek
                                                </div>
                                            }
                                        }
                                    </Template>
                                    <EditTemplate>
                                        @{
                                            var Context = (context as UserManage);
                                            <SfDropDownList ID="Roles" TItem="Roleses" TValue="string" @bind-Value="@(Context.roles)" DataSource="@_roles">
                                                <DropDownListFieldSettings Value="Roles" Text="Description"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        }
                                    </EditTemplate>
                                </GridColumn>
                                <GridColumn Field="@nameof(UserManage.status)" HeaderText="Status">
                                    <Template>
                                        @{
                                            var categori = (context as UserManage);
                                            @if (categori.status == "1")
                                            {
                                                <div>
                                                    <span class="h6 bg-success text-white">Active</span>
                                                </div>
                                            }
                                            @if (categori.status == "0")
                                            {
                                                <span class="h6 bg-danger text-white">In Active</span>
                                            }
                                        }
                                    </Template>
                                    <EditTemplate>
                                        @{
                                            var Context = (context as UserManage);
                                            <SfDropDownList ID="Status" TItem="Statuses" TValue="string" @bind-Value="@(Context.status)" DataSource="@_status">
                                                <DropDownListFieldSettings Value="Status" Text="Description"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        }
                                    </EditTemplate>
                                </GridColumn>
                                <GridColumn HeaderText="Edit User">
                                    <GridCommandColumns>
                                        <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() {IconCss="e-icons e-edit", CssClass="e-flat" })"></GridCommandColumn>
                                        <GridCommandColumn Type="CommandButtonType.Save" ButtonOption="@(new CommandButtonOptions() {IconCss="e-icons e-save", CssClass="e-flat" })"></GridCommandColumn>
                                        <GridCommandColumn Type="CommandButtonType.Cancel" ButtonOption="@(new CommandButtonOptions() {IconCss="e-icons e-cancel-icon", CssClass="e-flat" })"></GridCommandColumn>
                                    </GridCommandColumns>
                                </GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .e-plus-icon::before {
        content: '\e823';
    }
</style>

@code {
    private List<UserManage> _user;
    private List<Cabang> _cabang;
    private List<UserNew> _adduser;
    private SfGrid<UserManage> Grid;
    //private Cabang SelectedOrg = new Cabang();
    private UserNew model = new UserNew();
    public string ErrorDetails = "";
    private bool IsVisible { get; set; } = true;
    private DialogEffect AnimationEffect = DialogEffect.Zoom;

    List<Statuses> _status = new List<Statuses>
{
        new Statuses() { Status = "1", Description = "Active" },
        new Statuses() { Status = "0", Description = "In Active" }
    };

    List<Roleses> _roles = new List<Roleses>
{
        new Roleses() { Roles = "1", Description = "Admin" },
        new Roleses() { Roles = "2", Description = "Pengisi" },
        new Roleses() { Roles = "3", Description = "Pengecek" }
    };


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            CloseDialog();
            _user = userManageService.GetUser();
            _cabang = userManageService.GetCabang();
            StateHasChanged();
        }
    }

    private void OpenDialog()
    {
        this.IsVisible = true;
    }

    private void CloseDialog()
    {
        this.IsVisible = false;
    }

    //ga ada row selected diatas, ini untuk apa ?
    //public void RowSelectHandler(RowSelectEventArgs<Cabang> args)
    //{
    //    SelectedOrg = args.Data;
    //}

    private void submit() { 
    }

    public async Task ActionBeginHandler(ActionEventArgs<UserManage> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
                var result = await userManageService.UpdateUser(Args.Data);
                if (result.Item1 == 0)
                {
                    var mess = result.Item2;
                }
            //Args.Action selalu edit ga perlu if else
        }
    }

    public void ActionCompleteHandler(ActionEventArgs<UserManage> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            _user = userManageService.GetUser();
        }
    }
}
